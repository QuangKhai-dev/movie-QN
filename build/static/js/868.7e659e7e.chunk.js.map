{"version":3,"file":"static/js/868.7e659e7e.chunk.js","mappings":"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","sources":["pages/user/Register.jsx","pages/user/Login.jsx","layouts/userLayout/UserLayout.jsx"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { store } from '../../redux/store';\nimport { registerThunk } from '../../redux/thunk/userThunk';\n\nconst Register = () => {\n\n    const navigate = useNavigate();\n\n    const onFinish = (values) => {\n        store.dispatch(registerThunk(values)).unwrap().then(() => {\n            setTimeout(() => {\n                navigate('/dangnhap')\n            }, 1000)\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n    };\n\n    return (\n        <>\n            <h2 className='mb-2'>Đăng ký</h2>\n            <Form\n                name=\"basic\"\n                layout='vertical'\n                wrapperCol={{ span: 24 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Tài khoản\"\n                    name=\"taiKhoan\"\n                    rules={[\n                        { required: true, message: 'Tài khoản không được để trống o(TヘTo)' },\n                        { min: 5, message: 'Tài khoản không được ít hơn 5 kí tự ＞︿＜' },\n                        { whitespace: false, message: 'Tài khoản không chứa khoản trắng OwO' }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Mật khẩu\"\n                    name=\"matKhau\"\n                    rules={[{ required: true, message: 'Mật khẩu không được  (╹ڡ╹ )' },\n                    { min: 5, message: 'Mật khẩu tôi thiểu 5 kí tự {{{(>_<)}}}' },\n                    { max: 15, message: 'Mật khẩu tối đa 15 kí tự (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧' }\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n\n                    rules={[{ required: true, message: 'Email không được trống /(ㄒoㄒ)/~~' },\n                    { type: 'email', message: 'Email không hợp lệ (►__◄)' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Họ tên\"\n                    name=\"hoTen\"\n                    rules={[{ required: true, message: 'Họ tên không được trống' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Số điện thoại\"\n                    name=\"soDt\"\n                    rules={[{ required: true, message: 'Số điện thoại không được trống' },\n                    { len: 10, message: 'Tối đa 10 ký số' }]}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 24 }}>\n                    <span>Bạn đã có tài khoản?<Link to={'/dangnhap'} style={{ color: 'blue' }}> Trở về đăng nhập</Link></span>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Đăng ký\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nexport default Register;","import { Button, Form, Input } from 'antd';\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { store } from '../../redux/store';\nimport { loginThunk } from '../../redux/thunk/userThunk';\n\nconst Login = () => {\n\n    const navigate = useNavigate();\n\n    const onFinish = (values) => {\n        store.dispatch(loginThunk(values)).unwrap().then(()=>{\n            setTimeout(()=>{\n                navigate('/')\n            },1000)\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n    };\n\n    return (\n        <>\n            <h2 className='mb-2'>Đăng nhập</h2>\n            <Form\n                name=\"basic\"\n                layout='vertical'\n                wrapperCol={{ span: 24 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Tài khoản\"\n                    name=\"taiKhoan\"\n                    rules={[{ required: true, message: 'Tài khoản không được để trống o(TヘTo)' },{\n                        \n                    }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Mật khẩu\"\n                    name=\"matKhau\"\n                    rules={[{ required: true, message: 'Mật khẩu không được trống' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{span: 24 }}>\n                    <span>Bạn chưa có tài khoản?<Link to={'/dangky'} style={{color:'blue'}}> Đăng ký ngay</Link></span>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Đăng nhập\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nexport default Login;","import Lottie from 'lottie-react';\nimport React from 'react';\nimport Cinema from '../../assets/cinema-animation.json';\nimport Login from '../../pages/user/Login';\nimport Register from '../../pages/user/Register';\n\nconst UserLayout = ({Component}) => {\n\n\n  return (\n    <div className='user__layout'>\n      <div className=\"user__layout-left\">\n        <Lottie animationData={Cinema} />\n      </div>\n      <div className=\"user__layout-right\">\n        <Component />\n      </div>\n    </div>\n  )\n}\n\nexport default UserLayout"],"names":["Register","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","className","Form","name","layout","wrapperCol","span","initialValues","remember","onFinish","values","store","dispatch","registerThunk","unwrap","then","setTimeout","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","min","whitespace","Input","max","Password","type","len","Link","to","style","color","offset","Button","htmlType","Login","loginThunk","valuePropName","_ref","Component","Lottie","animationData","Cinema"],"sourceRoot":""}