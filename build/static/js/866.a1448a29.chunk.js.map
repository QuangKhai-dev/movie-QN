{"version":3,"file":"static/js/866.a1448a29.chunk.js","mappings":"iOAMA,MA2DA,EA3DcA,KAEV,MAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,8BACrBF,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CACDC,KAAK,QACLC,OAAO,WACPC,WAAY,CAAEC,KAAM,IACpBC,cAAe,CAAEC,UAAU,GAC3BC,SAnBMC,IACdC,EAAAA,EAAMC,UAASC,EAAAA,EAAAA,GAAWH,IAASI,SAASC,MAAK,KAC7CC,YAAW,KACPrB,EAAS,IAAI,GACf,IAAK,GACT,EAeMsB,eAZYC,MAaZC,aAAa,MAAKpB,SAAA,EAElBC,EAAAA,EAAAA,KAACE,EAAAA,EAAKkB,KAAI,CACNC,MAAM,oBACNlB,KAAK,WACLmB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uFAA0C,CAE7E,GAAGzB,UAEHC,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,OAGVzB,EAAAA,EAAAA,KAACE,EAAAA,EAAKkB,KAAI,CACNC,MAAM,qBACNlB,KAAK,UACLmB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+DAA+BzB,UAElEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAMC,SAAQ,OAGnB1B,EAAAA,EAAAA,KAACE,EAAAA,EAAKkB,KAAI,CAACjB,KAAK,WAAWwB,cAAc,UAAUtB,WAAY,CAACC,KAAM,IAAKP,UACvEF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,+CAAsBC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAI,UAAWC,MAAO,CAACC,MAAM,QAAQhC,SAAC,qCAG5EC,EAAAA,EAAAA,KAACE,EAAAA,EAAKkB,KAAI,CAACf,WAAY,CAAE2B,OAAQ,EAAG1B,KAAM,IAAKP,UAC3CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQpC,SAAC,oCAKlD,C","sources":["pages/user/Login.jsx"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { store } from '../../redux/store';\nimport { loginThunk } from '../../redux/thunk/userThunk';\n\nconst Login = () => {\n\n    const navigate = useNavigate();\n\n    const onFinish = (values) => {\n        store.dispatch(loginThunk(values)).unwrap().then(()=>{\n            setTimeout(()=>{\n                navigate('/')\n            },1000)\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n    };\n\n    return (\n        <>\n            <h2 className='mb-2'>Đăng nhập</h2>\n            <Form\n                name=\"basic\"\n                layout='vertical'\n                wrapperCol={{ span: 24 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Tài khoản\"\n                    name=\"taiKhoan\"\n                    rules={[{ required: true, message: 'Tài khoản không được để trống o(TヘTo)' },{\n                        \n                    }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Mật khẩu\"\n                    name=\"matKhau\"\n                    rules={[{ required: true, message: 'Mật khẩu không được trống' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{span: 24 }}>\n                    <span>Bạn chưa có tài khoản?<Link to={'/dangky'} style={{color:'blue'}}> Đăng ký ngay</Link></span>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Đăng nhập\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nexport default Login;"],"names":["Login","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","className","Form","name","layout","wrapperCol","span","initialValues","remember","onFinish","values","store","dispatch","loginThunk","unwrap","then","setTimeout","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Input","Password","valuePropName","Link","to","style","color","offset","Button","type","htmlType"],"sourceRoot":""}